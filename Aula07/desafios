// DESAFIO 01 FUNÇÃO

function soma(numero1, numero2) {
    return numero1 + numero2;
}

function subtracao(numero1, numero2) {
    return numero1 - numero2;
}

function multiplicacao(numero1, numero2) {
    return numero1 * numero2;
}

function divisao(numero1, numero2) {
    if (numero2 !== 0) {
        return numero1 / numero2;
    } else {
        return "Erro: Divisão por zero.";
    }
}

function calcular(numero1, numero2, operador) {
    if (operador === '+') {
        return soma(numero1, numero2);
    } else if (operador === '-') {
        return subtracao(numero1, numero2);
    } else if (operador === '*') {
        return multiplicacao(numero1, numero2);
    } else if (operador === '/') {
        return divisao(numero1, numero2);
    } else {
        return "Operador inválido. Por favor, use '+', '-', '*' ou '/'.";
    }
}

const resultado = calcular(4, 2, '/');
console.log(resultado);


// DESAFIO 02 FUNÇÃO

let saldoAtual = 0;

function fazerDeposito(quantia) {
    if (quantia > 0) {
        saldoAtual += quantia;
        console.log(`Depósito de R$${quantia} efetuado. Saldo atual: R$${saldoAtual}`);
    } else {
        console.log("Valor de depósito inválido. Insira um valor positivo.");
    }
}

function fazerSaque(quantia) {
    if (quantia > 0 && quantia <= saldoAtual) {
        saldoAtual -= quantia;
        console.log(`Saque de R$${quantia} efetuado. Saldo atual: R$${saldoAtual}`);
    } else if (quantia <= 0) {
        console.log("Valor de saque inválido. Insira um valor positivo.");
    } else {
        console.log("Saldo insuficiente para saque.");
    }
}

function verificarSaldo() {
    console.log(`Saldo atual: R$${saldoAtual}`);
}

function realizarTransacao() {
    const operacao = prompt(
        "Escolha a operação:\n1. Depositar\n2. Sacar\n3. Consultar Saldo\n4. Sair"
    );

    switch (operacao) {
        case "1":
            const valorDeposito = parseFloat(prompt("Informe o valor a depositar:"));
            fazerDeposito(valorDeposito);
            break;
        case "2":
            const valorSaque = parseFloat(prompt("Informe o valor a sacar:"));
            fazerSaque(valorSaque);
            break;
        case "3":
            verificarSaldo();
            break;
        case "4":
            console.log("Sessão encerrada.");
            return;
        default:
            console.log("Opção inválida. Tente novamente.");
    }

    realizarTransacao();
}

realizarTransacao();


// DESAFIO 03 FUNÇÃO

function criarTabuleiro() {
    return Array(9).fill(null);
  }
  
  function verificarVencedor(tabuleiro) {
    const padroesVitoria = [
      [0, 1, 2],
      [3, 4, 5],
      [6, 7, 8],
      [0, 3, 6],
      [1, 4, 7],
      [2, 5, 8],
      [0, 4, 8],
      [2, 4, 6],
    ];
  
    for (const padrao of padroesVitoria) {
      const [a, b, c] = padrao;
      if (tabuleiro[a] && tabuleiro[a] === tabuleiro[b] && tabuleiro[a] === tabuleiro[c]) {
        return tabuleiro[a];
      }
    }
    return null;
  }
  
  function tabuleiroCompleto(tabuleiro) {
    return tabuleiro.every((celula) => celula !== null);
  }
  
  function jogar() {
    let tabuleiro = criarTabuleiro();
    let jogadorAtual = "X";
    let jogoAtivo = true;
  
    function exibirTabuleiro() {
      console.log(
        tabuleiro[0] || " ",
        "|",
        tabuleiro[1] || " ",
        "|",
        tabuleiro[2] || " "
      );
      console.log(
        tabuleiro[3] || " ",
        "|",
        tabuleiro[4] || " ",
        "|",
        tabuleiro[5] || " "
      );
      console.log(
        tabuleiro[6] || " ",
        "|",
        tabuleiro[7] || " ",
        "|",
        tabuleiro[8] || " "
      );
    }
  
    let rodada = 0;
  
    while (jogoAtivo) {
      console.log("Rodada " + (rodada + 1));
      exibirTabuleiro();
  
      const movimento = prompt(
        `Jogador ${jogadorAtual}, informe o número da célula (1-9):`
      );
      const indiceMovimento = parseInt(movimento) - 1;
  
      if (
        tabuleiro[indiceMovimento] === null &&
        indiceMovimento >= 0 &&
        indiceMovimento <= 8
      ) {
        tabuleiro[indiceMovimento] = jogadorAtual;
  
        const vencedor = verificarVencedor(tabuleiro);
        if (vencedor) {
          console.log(`Jogador ${vencedor} venceu!`);
          jogoAtivo = false;
          exibirTabuleiro();
        } else if (tabuleiroCompleto(tabuleiro)) {
          console.log("Empate!");
          jogoAtivo = false;
          exibirTabuleiro();
        } else {
          jogadorAtual = jogadorAtual === "X" ? "O" : "X";
        }
        rodada++;
      } else {
        console.log("Jogada inválida. Tente novamente.");
      }
    }
  }
  
  jogar();
  
  // DESAFIO 01 LOGICA

  let array = [1, 3, 5, 6, 9];
let resultado1 = [];

let tamanho = array.length;

for (let i = 0; i < tamanho - 1; i++) {
    let min = i;
    for (let j = i + 1; j < tamanho; j++) {
        if (array[j] < array[min]) {
            min = j;
        }
    }

    let temp = array[i];
    array[i] = array[min];
    array[min] = temp;
}

let arrayMin = array.slice(0, tamanho - 1);
let arrayMax = array.slice(1, tamanho);

let somaMin = arrayMin.reduce((acc, curr) => acc + curr, 0);
let somaMax = arrayMax.reduce((acc, curr) => acc + curr, 0);

resultado.push(somaMin, somaMax);

console.log(resultado1);


// DESAFIO 02 LOGICA 

function escada(n) {
    for (let i = 1; i <= n; i++) {
      console.log('#'.repeat(i));
    }
  }
  
  escada(9);
  